<!DOCTYPE html>
<html>
<head>
    <title>$title</title>
    <script type='text/javascript' src="$d3API"></script>
    <script type='text/javascript' src="$d3CloudAPI"></script>
</head>
<body>
<script type='text/javascript'>
    var data = $data;

    var width = $width,
        height = $height,
        fontMin = $fontMin,
        fontMax = $fontMax,
    #if( $_userMap.containsKey("rotation") )
        rotation = $_userMap.get("rotation");
    #else
        rotation = 0;
    #end

    var scale = d3.scale.${scale}();
    var fill = d3.scale.${colorPalette}();
    scale.domain([d3.min(data.counts), d3.max(data.counts)]);
    scale.range([fontMin, fontMax]);

    d3.layout.cloud().size([width, height])
        .words(data.words.map(function (d, i) {
            var count = data.counts[i];
            return {
                'text': d #if( $showCounts ) + " " + count #end,
                'size': scale(count)
            };
        }))
        #if( $overflow )
        .overflow(true)
        #end
        .rotate(function() { return ~~(Math.random() * 2) * rotation; })
        .fontSize(function(d) { return d.size; })
        #if( $fontName )
        .font("$fontName")
        #end
        .on("end", draw)
        .start();

    function draw(words) {
      if (words.length < data.words.length)
        console.log("Warning: Could only fit " + words.length + " words in the given space, out of " + data.words.length + " total words");
      d3.select("body").append("svg")
          .attr("width", width)
          .attr("height", height)
        .append("g")
          .attr("transform", "translate(" + width/2 + "," + height/2 + ")")
        .selectAll("text")
          .data(words)
        .enter()
            .append("text")
              .style("font-size", function(d) { return d.size + "px"; })
              #if( $fontName )
              .style("font-family", function(d) { return d.font; })
              #end
              .attr("text-anchor", "middle")
              .attr("transform", function(d) {
                return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
              })
              .style("fill", function(d) { return fill(d.text.toLowerCase()); })
              .text(function(d) { return d.text; })
              #if( $showToolTip )
              .append("title")
                .text(function(d, i) { 
                    var idx = data.words.indexOf(d.text);
                    var count = data.counts[idx];
                    return d.text + "\n" + count; 
                })
              #end
              ;
    }
</script>
</body>
</html>
